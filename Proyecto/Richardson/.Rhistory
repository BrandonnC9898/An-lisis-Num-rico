}
# fun2 = function(x){return(x*exp(x))}
# y2 = fun2(x)
#
# derivada(x,y2,n=4)
library(Richardson)
fun = function(x){return(x^2)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
cat("x\t\ty\t\tR\t\te\n")
for(i in 1:length(datos$x)){
# cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error,"\n")
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\n")
}
# fun2 = function(x){return(x*exp(x))}
# y2 = fun2(x)
#
# derivada(x,y2,n=4)
library(Richardson)
fun = function(x){return(x^2)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
cat("x\t\ty\t\tR\t\te\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\n")
}
# fun2 = function(x){return(x*exp(x))}
# y2 = fun2(x)
#
# derivada(x,y2,n=4)
0.75^2
2*(-0.75)
library(Richardson)
imprimir = function(){
cat("x\t\ty\t\tR\t\te\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\n")
}
}
fun = function(x){return(x^2)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
imprimir(datos)
fun2 = function(x){return(x*exp(x))}
y2 = fun2(x)
datos = derivada(x,y2,n=4)
imprimir(datos)
library(Richardson)
imprimir = function(datos){
cat("x\t\ty\t\tR\t\te\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\n")
}
}
fun = function(x){return(x^2)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
imprimir(datos)
fun2 = function(x){return(x*exp(x))}
y2 = fun2(x)
datos = derivada(x,y2,n=4)
imprimir(datos)
library(Richardson)
imprimir = function(datos,derivada){
cat("x\t\ty\t\tR\t\te\tanalitica\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\t",derivada[i],"\n")
}
}
fun = function(x){return(x^2)}
derFun = function(x){return(2*x)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
d = derFun(datos$x)
imprimir(datos,d)
fun2 = function(x){return(x*exp(x))}
derFun2 = function(x){return(exp(x)+exp(x)*x)}
y2 = fun2(x)
datos = derivada(x,y2,n=4)
d = derFun(datos$x)
imprimir(datos,d)
library(Richardson)
imprimir = function(datos,derivada){
cat("x\t\ty\t\tR\t\te\tanalitica\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\t",derivada[i],"\n")
}
}
fun = function(x){return(x^2)}
derFun = function(x){return(2*x)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
d = derFun(datos$x)
imprimir(datos,d)
fun2 = function(x){return(x*exp(x))}
derFun2 = function(x){return(exp(x)+exp(x)*x)}
y2 = fun2(x)
datos = derivada(x,y2,n=4)
d = derFun2(datos$x)
imprimir(datos,d)
library(Richardson)
imprimir = function(datos,derivada){
cat("x\t\ty\t\tR\t\te\tanalitica\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\t",derivada[i],"\n")
}
}
fun = function(x){return(x^2)}
derFun = function(x){return(2*x)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
d = derFun(datos$x)
imprimir(datos,d)
fun2 = function(x){return(x*exp(x))}
derFun2 = function(x){return(exp(x)+exp(x)*x)}
y2 = fun2(x)
datos = derivada(x,y2,n=4)
d = derFun2(datos$x)
imprimir(datos,d)
fun3 = function(x){return(sin(x)+cos(x))}
derFun3 = function(x){return(cos(x)-sin(x))}
y3 = fun3(x)
datos = derivada(x,y3,n=4)
d = derFun3(datos$x)
imprimir(datos,d)
library(Richardson)
imprimir = function(datos,derivada){
cat("x\t\ty\t\tR\t\te\tanalitica\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\t",derivada[i],"\n")
}
}
fun = function(x){return(x^2)}
derFun = function(x){return(2*x)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
d = derFun(datos$x)
imprimir(datos,d)
fun2 = function(x){return(x*exp(x))}
derFun2 = function(x){return(exp(x)+exp(x)*x)}
y2 = fun2(x)
datos = derivada(x,y2,n=4)
d = derFun2(datos$x)
imprimir(datos,d)
fun3 = function(x){return(sin(x)+cos(x))}
derFun3 = function(x){return(cos(x)-sin(x))}
y3 = fun3(x)
datos = derivada(x,y3,h=0.001,n=4)
d = derFun3(datos$x)
imprimir(datos,d)
library(Richardson)
imprimir = function(datos,derivada){
cat("x\t\ty\t\tR\t\te\tanalitica\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\t",derivada[i],"\n")
}
}
fun = function(x){return(x^2)}
derFun = function(x){return(2*x)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
d = derFun(datos$x)
imprimir(datos,d)
fun2 = function(x){return(x*exp(x))}
derFun2 = function(x){return(exp(x)+exp(x)*x)}
y2 = fun2(x)
datos = derivada(x,y2,n=4)
d = derFun2(datos$x)
imprimir(datos,d)
fun3 = function(x){return(sin(x)+cos(x))}
derFun3 = function(x){return(cos(x)-sin(x))}
y3 = fun3(x)
datos = derivada(x,y3,h=0.001,n=10)
d = derFun3(datos$x)
imprimir(datos,d)
library(Richardson)
imprimir = function(datos,derivada){
cat("x\t\ty\t\tR\t\te\tanalitica\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\t",derivada[i],"\n")
}
}
fun = function(x){return(x^2)}
derFun = function(x){return(2*x)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
d = derFun(datos$x)
imprimir(datos,d)
fun2 = function(x){return(x*exp(x))}
derFun2 = function(x){return(exp(x)+exp(x)*x)}
y2 = fun2(x)
datos = derivada(x,y2,h=0.01,n=8)
d = derFun2(datos$x)
imprimir(datos,d)
fun3 = function(x){return(sin(x)+cos(x))}
derFun3 = function(x){return(cos(x)-sin(x))}
y3 = fun3(x)
datos = derivada(x,y3,h=0.001,n=10)
d = derFun3(datos$x)
imprimir(datos,d)
library(Richardson)
imprimir = function(datos,derivada){
cat("x\t\ty\t\tR\t\te\tanalitica\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\t",derivada[i],"\n")
}
}
fun = function(x){return(x^2)}
derFun = function(x){return(2*x)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
d = derFun(datos$x)
imprimir(datos,d)
fun2 = function(x){return(x*exp(x))}
derFun2 = function(x){return(exp(x)+exp(x)*x)}
y2 = fun2(x)
datos = derivada(x,y2,h=0.01,n=2)
d = derFun2(datos$x)
imprimir(datos,d)
fun3 = function(x){return(sin(x)+cos(x))}
derFun3 = function(x){return(cos(x)-sin(x))}
y3 = fun3(x)
datos = derivada(x,y3,h=0.001,n=8)
d = derFun3(datos$x)
imprimir(datos,d)
library(Richardson)
imprimir = function(datos,derivada){
cat("x\t\ty\t\tR\t\te\tanalitica\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\t",derivada[i],"\n")
}
}
fun = function(x){return(x^2)}
derFun = function(x){return(2*x)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
d = derFun(datos$x)
imprimir(datos,d)
fun2 = function(x){return(x*exp(x))}
derFun2 = function(x){return(exp(x)+exp(x)*x)}
y2 = fun2(x)
datos = derivada(x,y2,h=0.1,n=2)
d = derFun2(datos$x)
imprimir(datos,d)
fun3 = function(x){return(sin(x)+cos(x))}
derFun3 = function(x){return(cos(x)-sin(x))}
y3 = fun3(x)
datos = derivada(x,y3,h=0.001,n=8)
d = derFun3(datos$x)
imprimir(datos,d)
library(Richardson)
imprimir = function(datos,derivada){
cat("x\t\ty\t\tR\t\te\tanalitica\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\t",derivada[i],"\n")
}
}
fun = function(x){return(x^2)}
derFun = function(x){return(2*x)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
d = derFun(datos$x)
imprimir(datos,d)
fun2 = function(x){return(x*exp(x))}
derFun2 = function(x){return(exp(x)+exp(x)*x)}
y2 = fun2(x)
datos = derivada(x,y2,h=0.1,n=2)
d = derFun2(datos$x)
imprimir(datos,d)
fun3 = function(x){return(sin(x)+cos(x))}
derFun3 = function(x){return(cos(x)-sin(x))}
y3 = fun3(x)
datos = derivada(x,y3,h=0.001,n=8)
d = derFun3(datos$x)
imprimir(datos,d)
library(Richardson)
imprimir = function(datos,derivada){
cat("x\t\ty\t\tR\t\te\tanalitica\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\t",derivada[i],"\n")
}
}
fun = function(x){return(x^2)}
derFun = function(x){return(2*x)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
d = derFun(datos$x)
imprimir(datos,d)
fun2 = function(x){return(x*exp(x))}
derFun2 = function(x){return(exp(x)+exp(x)*x)}
y2 = fun2(x)
datos = derivada(x,y2,h=0.1,n=2)
d = derFun2(datos$x)
imprimir(datos,d)
fun3 = function(x){return(sin(x)+cos(x))}
derFun3 = function(x){return(cos(x)-sin(x))}
x = seq(-(pi/8),(pi/8),by=(pi/2))
y3 = fun3(x)
datos = derivada(x,y3,h=0.001,n=8)
d = derFun3(datos$x)
imprimir(datos,d)
library(Richardson)
imprimir = function(datos,derivada){
cat("x\t\ty\t\tR\t\te\tanalitica\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\t",derivada[i],"\n")
}
}
fun = function(x){return(x^2)}
derFun = function(x){return(2*x)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
d = derFun(datos$x)
imprimir(datos,d)
fun2 = function(x){return(x*exp(x))}
derFun2 = function(x){return(exp(x)+exp(x)*x)}
y2 = fun2(x)
datos = derivada(x,y2,h=0.1,n=2)
d = derFun2(datos$x)
imprimir(datos,d)
fun3 = function(x){return(sin(x)+cos(x))}
derFun3 = function(x){return(cos(x)-sin(x))}
x = seq((-pi/8),(pi/8),by=(pi/2))
y3 = fun3(x)
datos = derivada(x,y3,h=0.001,n=8)
d = derFun3(datos$x)
imprimir(datos,d)
library(Richardson)
imprimir = function(datos,derivada){
cat("x\t\ty\t\tR\t\te\tanalitica\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\t",derivada[i],"\n")
}
}
fun = function(x){return(x^2)}
derFun = function(x){return(2*x)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
d = derFun(datos$x)
imprimir(datos,d)
fun2 = function(x){return(x*exp(x))}
derFun2 = function(x){return(exp(x)+exp(x)*x)}
y2 = fun2(x)
datos = derivada(x,y2,h=0.1,n=2)
d = derFun2(datos$x)
imprimir(datos,d)
fun3 = function(x){return(sin(x)+cos(x))}
derFun3 = function(x){return(cos(x)-sin(x))}
x = seq((-pi/8),(pi/8),by=(pi/2))
y3 = fun3(x)
datos = derivada(x,y3,h=0.01,n=8)
d = derFun3(datos$x)
imprimir(datos,d)
library(Richardson)
imprimir = function(datos,derivada){
cat("x\t\ty\t\tR\t\te\tanalitica\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\t",derivada[i],"\n")
}
}
fun = function(x){return(x^2)}
derFun = function(x){return(2*x)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
d = derFun(datos$x)
imprimir(datos,d)
fun2 = function(x){return(x*exp(x))}
derFun2 = function(x){return(exp(x)+exp(x)*x)}
y2 = fun2(x)
datos = derivada(x,y2,h=0.1,n=2)
d = derFun2(datos$x)
imprimir(datos,d)
fun3 = function(x){return(sin(x)+cos(x))}
derFun3 = function(x){return(cos(x)-sin(x))}
x = seq((-pi/8),(pi/8),by=(pi/2))
y3 = fun3(x)
datos = derivada(x,y3,h=0.001,n=8)
d = derFun3(datos$x)
imprimir(datos,d)
library(Richardson)
imprimir = function(datos,derivada){
cat("x\t\ty\t\tR\t\te\tanalitica\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\t",derivada[i],"\n")
}
}
fun = function(x){return(x^2)}
derFun = function(x){return(2*x)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
d = derFun(datos$x)
imprimir(datos,d)
fun2 = function(x){return(x*exp(x))}
derFun2 = function(x){return(exp(x)+exp(x)*x)}
y2 = fun2(x)
datos = derivada(x,y2,h=0.1,n=2)
d = derFun2(datos$x)
imprimir(datos,d)
fun3 = function(x){return(sin(x)+cos(x))}
derFun3 = function(x){return(cos(x)-sin(x))}
# x = seq((-pi/8),(pi/8),by=(pi/2))
y3 = fun3(x)
datos = derivada(x,y3,h=0.001,n=8)
d = derFun3(datos$x)
imprimir(datos,d)
x = seq((-pi/8),(pi/8),by=(pi/2))
x
x = seq((-2*pi),(2*pi),by=(pi/2))
x
library(Richardson)
imprimir = function(datos,derivada){
cat("x\t\ty\t\tR\t\te\tanalitica\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\t",derivada[i],"\n")
}
}
fun = function(x){return(x^2)}
derFun = function(x){return(2*x)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
d = derFun(datos$x)
imprimir(datos,d)
fun2 = function(x){return(x*exp(x))}
derFun2 = function(x){return(exp(x)+exp(x)*x)}
y2 = fun2(x)
datos = derivada(x,y2,h=0.1,n=2)
d = derFun2(datos$x)
imprimir(datos,d)
fun3 = function(x){return(sin(x)+cos(x))}
derFun3 = function(x){return(cos(x)-sin(x))}
x = seq((-2*pi),(2*pi),by=(pi/2))
y3 = fun3(x)
datos = derivada(x,y3,h=0.001,n=8)
d = derFun3(datos$x)
imprimir(datos,d)
library(Richardson)
imprimir = function(datos,derivada){
cat("x\t\ty\t\tR\t\te\tanalitica\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\t",derivada[i],"\n")
}
}
fun = function(x){return(x^2)}
derFun = function(x){return(2*x)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
d = derFun(datos$x)
imprimir(datos,d)
fun2 = function(x){return(x*exp(x))}
derFun2 = function(x){return(exp(x)+exp(x)*x)}
y2 = fun2(x)
datos = derivada(x,y2,h=0.1,n=2)
d = derFun2(datos$x)
imprimir(datos,d)
fun3 = function(x){return(sin(x)+cos(x))}
derFun3 = function(x){return(cos(x)-sin(x))}
x = seq((-2*pi),(2*pi),by=(pi/8))
y3 = fun3(x)
datos = derivada(x,y3,h=0.001,n=8)
d = derFun3(datos$x)
imprimir(datos,d)
library(Richardson)
library(Richardson)
imprimir = function(datos,derivada){
cat("x\t\ty\t\tR\t\te\tanalitica\n")
for(i in 1:length(datos$x)){
cat(datos$x[i],"\t",datos$y[i],"\t",datos$resultados[i],"\t",datos$error[i],"\t",derivada[i],"\n")
}
}
fun = function(x){return(x^2)}
derFun = function(x){return(2*x)}
x = seq(-1,3,by=0.25)
y = fun(x)
datos = derivada(x,y)
d = derFun(datos$x)
imprimir(datos,d)
fun2 = function(x){return(x*exp(x))}
derFun2 = function(x){return(exp(x)+exp(x)*x)}
y2 = fun2(x)
datos = derivada(x,y2,h=0.1,n=2)
d = derFun2(datos$x)
imprimir(datos,d)
fun3 = function(x){return(sin(x)+cos(x))}
derFun3 = function(x){return(cos(x)-sin(x))}
x = seq((-2*pi),(2*pi),by=(pi/8))
y3 = fun3(x)
datos = derivada(x,y3,h=0.001,n=8)
d = derFun3(datos$x)
imprimir(datos,d)
library(Richardson)
library(Richardson)
library(Richardson)
